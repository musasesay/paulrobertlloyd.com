# Image conversion
# https://github.com/berlinonline/converjon
# Using $request_uri in rewrites maintains request URI as received from client
# i.e. https://domain.tld is not rewritten https:/domain.tld

location = /images/status {
    proxy_pass http://localhost:15443/status;
}

# LOCAL IMAGES
# Resize local image based width
location ~ "^\/images\/(\d+)w\/" {
    if ($request_uri ~ "^\/images\/(\d+)w\/(100|[1-9]\d?)q\/([^\s]*)$") {
        set $img_width $1;
        set $img_quality $2;
        set $img_path $3;
        rewrite .* /?file=local:$img_path&width=$img_width&quality=$img_quality&interlace=plane break;
    }
    proxy_pass http://localhost:15443;
    proxy_redirect off;
    proxy_set_header Host $host;
}

# Resize (and crop) local image based on width and height
location ~ "^\/images\/(\d+)x(\d+)\/" {
    if ($request_uri ~ "^\/images\/(\d+)x(\d+)\/(100|[1-9]\d?)q\/([^\s]*)$") {
        set $img_width $1;
        set $img_height $2;
        set $img_quality $3;
        set $img_path $4;
        rewrite .* /?file=local:$img_path&width=$img_width&height=$img_height&quality=$img_quality&interlace=plane break;
    }
    proxy_pass http://localhost:15443;
    proxy_redirect off;
    proxy_set_header Host $host;
}

# REMOTE IMAGES FROM WHITELISTED URLS
# Resize remote image based on width
location ~ "^\/remote\/(\d+)w\/" {
    if ($request_uri ~ "^\/remote\/(\d+)w\/(100|[1-9]\d?)q\/([^\s]*)$") {
        set $img_width $1;
        set $img_quality $2;
        set $img_url $3;
        rewrite .* /?url=$img_url&width=$img_width&quality=$img_quality&interlace=plane break;
    }
    proxy_pass http://localhost:15443;
    proxy_redirect off;
    proxy_set_header Host $host;
}

# Resize (and crop) local image based on width and height
location ~ "^\/remote\/(\d+)w\/" {
    if ($request_uri ~ "^\/remote\/(\d+)w\/(100|[1-9]\d?)q\/([^\s]*)$") {
        set $img_width $1;
        set $img_quality $2;
        set $img_url $3;
        rewrite .* /?url=$img_url&width=$img_width&quality=$img_quality&interlace=plane break;
    }
    proxy_pass http://localhost:15443;
    proxy_redirect off;
    proxy_set_header Host $host;
}
