# Requests original file from itself and resize
location ~ ^/resize/(\d+)x(\d+)/(.*) {
    proxy_pass http://127.0.0.1:80/$3;

    proxy_cache processedimages;
    proxy_cache_key "$host$document_uri";
    proxy_cache_valid 200 1d;
    proxy_cache_valid any 1m;
    proxy_cache_use_stale error timeout invalid_header updating;

    image_filter resize $1 $2;
    image_filter_jpeg_quality 80;
    image_filter_buffer 20M;
    image_filter_interlace on;
}

# Request original file from itself and crop
location ~ ^/crop/(\d+)x(\d+)/(.*) {
    proxy_pass http://127.0.0.1:80/$3;

    proxy_cache processedimages;
    proxy_cache_key "$host$document_uri";
    proxy_cache_valid 200 1d;
    proxy_cache_valid any 1m;
    proxy_cache_use_stale error timeout invalid_header updating;

    image_filter crop $1 $2;
    image_filter_jpeg_quality 80;
    image_filter_buffer 20M;
    image_filter_interlace on;
}

# Processed image path, i.e. http://example.com/crop/200x200/example.jpg
location ~ /(\d+x\d+/.*) {
    try_files /$1 @img;
}

# Original image path, i.e. http://example.com/example.jpg
location / {
    # If we don't find the file locally download it.
    error_page  404 = @proxy;
}

# Save resized image locally
location @img {
    set $remote_uri $uri;
    set $protocol "http";
    if ($uri ~ "^/https?\:\/(.*)") {
        set $remote_uri $1;
    }
    if ($uri ~ "^/https.*") {
        set $protocol "https";
    }
    set $full_uri "${protocol}://${remote_uri}";

    proxy_pass $full_uri;
    proxy_store /var/www/cache/store/img/$full_uri;
}

# Get remote image and save it locally
location @proxy {
    set $remote_uri $uri;
    set $protocol "http";
    if ($uri ~ "^/https?\:\/(.*)") {
        set $remote_uri $1;
    }
    if ($uri ~ "^/https.*") {
        set $protocol "https";
    }
    set $full_uri "${protocol}://${remote_uri}";

    proxy_pass $full_uri;
    proxy_connect_timeout 30s;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_store /var/www/cache/store/img$uri;
}
