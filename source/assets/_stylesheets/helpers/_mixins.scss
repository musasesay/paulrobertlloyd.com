//  ============================================================================
//  Mixins
//  ============================================================================

// Clearfix
@mixin clearfix {
    &::before,
    &::after {
        display: table;
        clear: both;
        content: '';
    }
}


// Image replacement
@mixin image-replace {
    text-indent: 200%;
    overflow: hidden;
    white-space: nowrap;
}


// Visually hidden, but still audible
@mixin hidden {
    position: absolute;
    margin: -1px;
    border: 0;
    padding: 0;
    width: 1px;
    height: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
}


// Font families
@mixin ff--serif($font-weight: normal) {
    font-family: 'Georgia', serif;
    font-weight: $font-weight;

    .fonts-loaded & {
        font-family: 'Tiempos', 'Georgia', serif;
        font-size-adjust: 0.481;
    }
}

@mixin ff--sans-serif($font-weight: normal) {
    font-family: 'Helvetica Neue', sans-serif;
    font-weight: $font-weight;

    .fonts-loaded & {
        font-family: 'Calibre', 'Helvetica Neue', sans-serif;
        font-size-adjust: 0.523;
    }
}

@mixin ff--monospace($font-weight: normal) {
    font-family: 'Menlo', monospace;
    font-weight: $font-weight;
}


// Font sizes
@mixin fs--heading-1 {
    line-height: (28/32);
    font-size: 2rem; // 32px
    letter-spacing: -0.015em;

    @media (min-width: $b__b) {
        font-size: 2.5rem; // 40px
    }

    @media (min-width: $b__c) {
        font-size: 3.5rem; // 56px
    }
}

@mixin fs--heading-2 {
    line-height: (20/24);
    font-size: 1.5rem; // 24px
    letter-spacing: -0.02em;

    @media (min-width: $b__b) {
        font-size: 1.75rem; // 28px
    }
}

@mixin fs--heading-3 {
    line-height: (24/20);
    font-size: 1.25rem; // 20px
    letter-spacing: -0.015em;

    @media (min-width: $b__b) {
        line-height: (28/24);
        font-size: 1.5rem; // 24px
    }
}

@mixin fs--heading-4 {
    line-height: (20/16);
    font-size: 1rem; // 16px
    letter-spacing: -0.01em;

    @media (min-width: $b__b) {
        font-size: 1.25rem; // 20px
    }
}

@mixin fs--lede {
    line-height: (24/20);
    font-size: 1.25rem; // 20px
    letter-spacing: -0.015em;

    @media (min-width: $b__b) {
        line-height: (28/24);
        font-size: 1.5rem; // 24px
    }
}

@mixin fs--billboard {
    line-height: (20/16);
    font-size: 1rem; // 16px

    @media (min-width: $b__b) {
        line-height: (24/18);
        font-size: 1.125rem; // 18px
    }
}

@mixin fs--prose {
    line-height: (28/16);
    font-size: 1rem; // 16px

    @media (min-width: $b__b) {
        line-height: (30/18);
        font-size: 1.125rem; // 18px
    }
}

@mixin fs--caption {
    line-height: (18/14);
    font-size: 0.875rem; // 14px

    @media (min-width: $b__b) {
        line-height: (20/16);
        font-size: 1rem; // 16px
    }
}


// Caps
@mixin smcp { font-feature-settings: 'smcp' 1; }
@mixin c2sc { font-feature-settings: 'c2sc' 1; }


// Text underline colour
@mixin text-decoration-color($color) {
    @if $color != 'none' {
        background-image: linear-gradient(to bottom, transparent 50%, $color 50%);
        background-repeat: repeat-x;
        background-position: 0% 92.5%;
        background-size: 0.5em 2px;
        text-decoration: none;
    } @else {
        background-image: none;
    }
}


// Decorated links
@mixin decorated-links {
    a:not([class]) {
        @include text-decoration-color($c__identity--1);

        .t-inverted & {
            @include text-decoration-color($c__neutral--ai);
        }
    }

    a:not([class]):hover {
        @include text-decoration-color($c__identity--2);

        .t-inverted & {
            @include text-decoration-color($c__neutral--9);
        }
    }

    a:not([class]):active {
        @include text-decoration-color(lighten($c__identity--2, 10%));

        .t-inverted & {
            @include text-decoration-color(lighten($c__neutral--9, 10%));
        }
    }
}


// Line rule
@mixin rule($el: 'before', $display: block, $height: ($u__baseline / 4)) {
    @if $el == 'before' or $el == 'after' {
        &:#{$el} {
            display: $display;
            border-top: $height solid;
            width: ($u__baseline * 2);
//            opacity: 0.5;
            content: '';
            @if $el == 'before' {
                margin-bottom: ($u__baseline / 4);
            }
            @if $el == 'after' {
                margin-top: ($u__baseline / 4);
            }
        }
    } @else {
        @error "`#{$el}` is not a valid pseudo-element.";
    }
}
