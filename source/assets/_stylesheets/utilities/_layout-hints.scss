/*  =========================================================================
    Layout hints
    ========================================================================= */

$grid: (4 3 3 3 3);
$context-inner: nested(4 of $grid at 2);

/* Align element right or left */
.u-align-right {
    @include span(1 of $context-inner last);
    margin-top: 0;
    margin-bottom: ($u__baseline / 2);
    margin-left: gutter();
}

.u-align-left {
    @include span(1 of $context-inner first);
    margin-top: 0;
    margin-bottom: ($u__baseline / 2);
}


/* Pull element aside */
.u-aside {
    @media (min-width: $b__b) {
        float: left;
        margin-left: (percentage(1/3) * -1);
        width: (percentage(1/3) - gutter());
    }
}


/* Pull element right or left */
.u-pull-right {
    @media (min-width: $b__a) {
        @include span(2 of $context-inner last);
        margin-left: gutter();
    }
}

.u-pull-left {
    @media (min-width: $b__a) {
        @include span(2 of $context-inner first);
        margin-left: (percentage(1/3) * -1);
    }
}


/* On wider breakpoints, extend element outwards by an additional column */
.u-extend {
    $margin-left: percentage(1/3);

    .s-prose & {
        @media (min-width: $b__b) {
            margin-left: ($margin-left * -1);
        }
    }
}



/* On wider breakpoints, bleed element to edges of the main container */
.u-bleed {
    $margin-left: percentage(1/3);
    $gutter-left: ($u__baseline * 2);

    margin-right: ($u__baseline * -1);
    margin-left: ($u__baseline * -1);

    @media (min-width: $b__a) {
        margin-right: ($u__baseline * -2);
        margin-left: ($u__baseline * -2);
    }

    @media (min-width: $b__c) {
        margin-right: 0;
        margin-left: 0;
    }

    .s-prose & {
        @media (min-width: $b__b) {
            margin-left: ($margin-left * -1);
            margin-left: calc((#{$margin-left} + #{$gutter-left}) * -1);
        }

        @media (min-width: $b__c) {
            margin-left: ($margin-left * -1);
        }
    }
}
